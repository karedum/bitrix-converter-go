services:

  rabbit:
    image: rabbitmq:3.13.7-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    mem_limit: 500m
    ports:
      - 15672:15672
      - 5672:5672
    #volumes:
     # - rabbitmq:/var/lib/rabbitmq
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 30s
      retries: 3
#    networks:
#      - converter

  producer:
    container_name: producer
    network_mode: "host"
    restart: always
    ports:
      - 8084:8084
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./dockerize/producer/Dockerfile
    depends_on:
      consumer:
        condition: service_started
      rabbit:
        condition: service_healthy
#    networks:
#      - converter

  consumer:
    container_name: consumer
    network_mode: "host"
    restart: no
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./dockerize/consumer/Dockerfile
    depends_on:
      rabbit:
        condition: service_healthy
    volumes:
      - consumer:/app/upload
#    networks:
#      - converter

volumes:
  consumer:
    driver: local
  rabbitmq:
    driver: local


#networks:
#  converter: